name: Code Coverage

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'rs/**'
  
env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: rs
  
jobs:
  # N.B. We don't run coverage tests on `wasm-pack test` tests, that seems to require a complex rustc wrapper script
  # to selectively apply the flags only on our crates.
  # Error: https://github.com/apollographql/rust/runs/1052878281?check_suite_focus=true
  # See: https://stackoverflow.com/questions/61989746/how-do-i-use-zprofile-to-generate-code-coverage-for-a-nostd-kernel
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: '0'
      RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    steps:
      - uses: actions/checkout@v2

      ### INSTALL RUST ###
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: nightly
          override: true
      - name: Install grcov
        run: cargo install grcov

      ### BUILD CACHE SPECIFIC FOR COVERAGE ###
      - name: Cache Cargo registry, index
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            ~/.cargo/git
          key: linux-${{ steps.toolchain.outputs.rustc_hash }}-rust-cov-${{ hashFiles('**/Cargo.lock') }}

      ### RUN TESTS & COVERAGE ###
      - name: Test (cargo test)
        run: cargo test --workspace --locked 
      - name: Run grcov
        run: |
          grcov target/debug -s . -t lcov -o target/debug/lcov.info \
          --llvm --branch --ignore-not-existing \
          --excl-line "#\[derive\(" \
          --excl-br-line "#\[derive\(" \
          --excl-start "mod tests \{" \
          --excl-br-start "mod tests \{"

      ### UPLOAD RESULTS ###
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: target/debug/lcov.info

