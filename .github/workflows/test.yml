name: Tests (all platforms)

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  check_format_and_lint:
    continue-on-error: true # we want to show this check failure in GH but to not prevent building.
    name: Check formatting (rustfmt) and lint with Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy

      ### BUILD CACHE ###
      - name: Cache Cargo registry, target, index
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: linux-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}

      ### FORMATTING AND STYLE ###
      - name: Check formatting
        run: cargo fmt -- --check

      - name: Check Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test-no-run:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v2

      ### INSTALL RUST ###
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal

      ### BUILD CACHE ###
      # NB: We install gnu-tar because BSD tar is buggy on Github's macos machines. https://github.com/actions/cache/issues/403
      - name: Install GNU tar (Macos)
        if: matrix.build == 'macos'
        run: |
          brew install gnu-tar
          echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
      - name: Cache Cargo registry, target, index
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            ~/.cargo/git
            target
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}

      ### COMPILE INCLUDING TESTS ###
      # Note: we do this so that we'll cache the compile results/registry even if test might fail
      # We don't need to do it if there was a cache hit.
      - name: Compile tests on cache miss
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--no-run --workspace --locked"

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: test-no-run
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v2

      ### INSTALL RUST ###
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal

      ### BUILD CACHE ###
      # NB: We install gnu-tar because BSD tar is buggy on Github's macos machines. https://github.com/actions/cache/issues/403
      - name: Install GNU tar (Macos)
        if: matrix.build == 'macos'
        run: |
          brew install gnu-tar
          echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
      - name: Cache Cargo registry, target, index
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            ~/.cargo/git
            target
          key: ${{ matrix.build }}-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}

      ### INSTALL WASM-PACK ###
      - name: Install wasm-pack (unix)
        if: matrix.build != 'windows'
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install wasm-pack (windows)
        if: matrix.build == 'windows'
        run: npm install -g wasm-pack

      ### RUN TESTS ###
      - name: Test (cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--workspace --locked -- --nocapture"
        env:
          RUST_LOG: debug
          RUST_BACKTRACE: 1
      - name: Test (wasm-pack test --node)
        working-directory: query-planner-wasm
        run: wasm-pack test --node
